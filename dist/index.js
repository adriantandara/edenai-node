"use strict";var p=Object.create;var i=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var c=Object.getOwnPropertyNames;var l=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var u=(e,t)=>{for(var r in t)i(e,r,{get:t[r],enumerable:!0})},s=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of c(t))!g.call(e,a)&&a!==r&&i(e,a,{get:()=>t[a],enumerable:!(o=h(t,a))||o.enumerable});return e};var d=(e,t,r)=>(r=e!=null?p(l(e)):{},s(t||!e||!e.__esModule?i(r,"default",{value:e,enumerable:!0}):r,e)),w=e=>s(i({},"__esModule",{value:!0}),e);var _={};u(_,{EdenAINode:()=>f});module.exports=w(_);var n=d(require("axios"));class f{apiKey;apiUrl="https://api.edenai.run/v2/";constructor(t){this.apiKey=t}getChatResponse(t,r){if(!this.apiKey)throw new Error("EdenAI API Key not set");if(r!=="google"&&r!=="openai")throw new Error("Invalid provider");(0,n.default)(`${this.apiUrl}/text/chat`,{method:"POST",headers:{accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${this.apiKey}`},data:{response_as_dict:!0,attributes_as_list:!1,show_original_response:!1,temperature:0,max_tokens:1e3,providers:r,text:t}}).then(({data:o})=>{if(o.openai.status==="success")return o.openai.generated_text;throw new Error("Not found response for chat.")}).catch(o=>{throw new Error(o)})}}
