"use strict";var h=Object.create;var i=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var f=(e,t)=>{for(var s in t)i(e,s,{get:t[s],enumerable:!0})},p=(e,t,s,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of d(t))!u.call(e,r)&&r!==s&&i(e,r,{get:()=>t[r],enumerable:!(a=l(t,r))||a.enumerable});return e};var w=(e,t,s)=>(s=e!=null?h(g(e)):{},p(t||!e||!e.__esModule?i(s,"default",{value:e,enumerable:!0}):s,e)),_=e=>p(i({},"__esModule",{value:!0}),e);var x={};f(x,{EdenAINode:()=>m});module.exports=_(x);var c=w(require("axios"));class m{apiKey;apiUrl="https://api.edenai.run/v2";constructor(t){this.apiKey=t}getChatResponse(t,s){if(!this.apiKey)throw new Error("EdenAI API Key not set");if(s!=="google"&&s!=="openai")throw new Error("Invalid provider");return new Promise((a,r)=>{(0,c.default)(`${this.apiUrl}/text/chat`,{method:"POST",headers:{accept:"application/json","content-type":"application/json",authorization:`Bearer ${this.apiKey}`},data:{response_as_dict:!0,attributes_as_list:!1,show_original_response:!1,temperature:0,max_tokens:1e3,providers:s,text:t}}).then(o=>{const n=o.data;n.openai.status==="success"?a(n.openai.generated_text):r(new Error("Not found response for chat."))}).catch(o=>{r(new Error(o))})})}}
