"use strict";var h=Object.create;var o=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var d=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var f=(e,t)=>{for(var s in t)o(e,s,{get:t[s],enumerable:!0})},p=(e,t,s,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of g(t))!u.call(e,r)&&r!==s&&o(e,r,{get:()=>t[r],enumerable:!(i=l(t,r))||i.enumerable});return e};var w=(e,t,s)=>(s=e!=null?h(d(e)):{},p(t||!e||!e.__esModule?o(s,"default",{value:e,enumerable:!0}):s,e)),_=e=>p(o({},"__esModule",{value:!0}),e);var m={};f(m,{EdenAINode:()=>x});module.exports=_(m);var c=w(require("axios"));class x{apiKey;apiUrl="https://api.edenai.run/v2/";constructor(t){this.apiKey=t}getChatResponse(t,s){if(!this.apiKey)throw new Error("EdenAI API Key not set");if(s!=="google"&&s!=="openai")throw new Error("Invalid provider");return new Promise((i,r)=>{c.default.post(`${this.apiUrl}/text/chat`,{response_as_dict:!0,attributes_as_list:!1,show_original_response:!1,temperature:0,max_tokens:1e3,providers:s,text:t},{headers:{accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${this.apiKey}`}}).then(a=>{const n=a.data;n.openai.status==="success"?i(n.openai.generated_text):r(new Error("Not found response for chat."))}).catch(a=>{r(new Error(a))})})}}
